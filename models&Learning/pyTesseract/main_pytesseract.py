# -*- coding: utf-8 -*-
"""pytesseract.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uUXfdlxqpX1POHK0F-G5dA8K4fB7rWxe
"""

# import random
# import os
# import shutil
import pytesseract
import cv2
try:
    from PIL import Image
except ImportError:
    import Image

image_path = "targetDoc.jpg"
image_path = "TestingTextDetection.png"
image_path = "TestingTextDetection.jpg"

windowSize = (1000, 563)
cv2.namedWindow('Result', cv2.WINDOW_NORMAL)
cv2.resizeWindow('Result', windowSize[0], windowSize[1])

img = cv2.imread(image_path)
# img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
# print(pytesseract.image_to_string(img))

# # DETECTING CHARACTERS
hImg, wImg, _ = img.shape
# boxes = pytesseract.image_to_boxes(img)
# print(pytesseract.image_to_string(img))
# for b in boxes.splitlines():
#     posData = b.split(" ")
#     x, y, w, h = int(posData[1]), int(
#         posData[2]), int(posData[3]), int(posData[4])
#     cv2.rectangle(img, (x, hImg-y), (w, hImg-h), (0, 0, 255), 2)
#     cv2.putText(img, posData[0], (x-40, hImg-y+20),
#                 cv2.FONT_HERSHEY_COMPLEX, 1, (0, 0, 0), 3)

# DETECTING WORDS
hImg, wImg, _ = img.shape
# TO ONLY DETECT DIGITS
# cong = r'--oem 3 --psm 6 outputbase digits'
# boxes = pytesseract.image_to_data(img, config=cong)

boxes = pytesseract.image_to_data(img, config="OEM_CUBE_ONLY TESSERACT")
boxesIter = boxes.splitlines()
for i in range(1, len(boxesIter)):
    boxDataArr = boxesIter[i].split()
    if len(boxDataArr) == 12:
        print(boxDataArr[-1])
        x, y, w, h = int(boxDataArr[6]), int(boxDataArr[7]), int(
            boxDataArr[8]), int(boxDataArr[9])
        cv2.rectangle(img, (x, y), (w+x, h+y), (0, 0, 255), 3)
        cv2.putText(img, boxDataArr[11], (x-20, y),
                    cv2.FONT_HERSHEY_COMPLEX, 1, (0, 0, 0), 3)


cv2.imshow('Result', img)
cv2.waitKey(0)
